name: Run tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test on python ${{ matrix.node_version }} on os ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#          - {name: Linux, python: '3.8', os: ubuntu-latest, tox: py38}
#          - {name: Windows, python: '3.8', os: windows-latest, tox: py38}
#          - {name: Mac, python: '3.8', os: macos-latest, tox: py38}
          - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}
#          - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}
#          - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: update pip
      run: |
        pip install -U wheel
        pip install -U setuptools
        python -m pip install -U pip
    - name: get pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"
    - name: cache pip
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles('setup.py') }}|${{ hashFiles('tox.ini') }}
    - run: pip install tox
    - run: tox -e ${{ matrix.tox }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest 
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
